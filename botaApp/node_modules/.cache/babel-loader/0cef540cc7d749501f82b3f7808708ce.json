{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\samples\\\\botapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\samples\\\\botapp\\\\src\\\\pages\\\\main\\\\index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bots: [],\n      docInfo: {},\n      page: 1 //Load that values\n\n    };\n\n    this.loadBots = async (page = 1) => {\n      const response = await api.get(\"/bots?page=\".concat(page));\n      console.log(response.data);\n\n      const _response$data = response.data,\n            docs = _response$data.docs,\n            docInfo = _objectWithoutProperties(_response$data, [\"docs\"]);\n\n      this.setState({\n        bots: docs,\n        docInfo,\n        page\n      });\n    };\n\n    this.nextPage = () => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            docInfo = _this$state.docInfo;\n      if (page === docInfo.pages) return;\n      const pageNumber = page + 1;\n      this.loadBots(pageNumber);\n    };\n\n    this.prevPage = () => {\n      const _this$state2 = this.state,\n            page = _this$state2.page,\n            docInfo = _this$state2.docInfo;\n      if (page === 1) return;\n      const pageNumber = page - 1;\n      this.loadBots(pageNumber);\n    };\n  }\n\n  componentDidMount() {\n    this.loadBots();\n  } //Fuction used to load bot informations. note that we call docs in the data because we used\n  //pagination in the api.\n\n\n  deleteBot(id) {\n    api.delete(\"/bots/\".concat(id));\n    this.props.history.push(\"/bots?page=\".concat(page));\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          bots = _this$state3.bots,\n          page = _this$state3.page,\n          docInfo = _this$state3.docInfo;\n    return React.createElement(\"div\", {\n      className: \"bots-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/createBot',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Criar um novo Bot \")), bots.map(bot => React.createElement(\"article\", {\n      key: bot._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, bot.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Criado em \", bot.createdAt), React.createElement(Link, {\n      to: \"/bots/\".concat(bot._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Editar \"), React.createElement(\"button\", {\n      onClick: () => {\n        this.deleteBot(bot._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Deletar\"))), \".bind(this)\", React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page === 1,\n      onClick: this.prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: page === docInfo.pages,\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Lucas\\Desktop\\samples\\botapp\\src\\pages\\main\\index.js"],"names":["React","Component","api","Link","Main","state","bots","docInfo","page","loadBots","response","get","console","log","data","docs","setState","nextPage","pages","pageNumber","prevPage","componentDidMount","deleteBot","id","delete","props","history","push","render","map","bot","_id","name","createdAt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport api from '../../services/api'\r\nimport './styles.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Main extends Component {\r\n\t//save values from DB \r\n\tstate = {\r\n\t\tbots: [],\r\n\t\tdocInfo: {},\r\n\t\tpage: 1,\r\n\r\n\t}\r\n\r\n\t//Load that values\r\n\tcomponentDidMount(){\r\n\t\tthis.loadBots()\r\n\t}\r\n\r\n\t//Fuction used to load bot informations. note that we call docs in the data because we used\r\n\t//pagination in the api.\r\n\tloadBots = async (page = 1) => {\r\n\t\tconst response = await api.get(`/bots?page=${page}`)\r\n\t\tconsole.log(response.data)\r\n\t\tconst {docs, ...docInfo } = response.data \r\n\t\tthis.setState({bots: docs, docInfo, page})\r\n\t}\r\n\r\n\t//Function used to go to next page * Same idea! Do nothing when the users are in the last page\r\n\tnextPage = () =>{\r\n\t\tconst { page, docInfo} = this.state;\r\n\r\n\t\tif(page=== docInfo.pages) return\r\n\r\n\t\tconst pageNumber = page + 1;\r\n\r\n\t\tthis.loadBots(pageNumber)\r\n\t}\r\n\t\r\n\t//Function used to go to previous page *Do nothing when the users are in the first page\r\n\tprevPage = () =>{\r\n\t\tconst { page, docInfo} = this.state;\r\n\r\n\t\tif(page=== 1) return\r\n\r\n\t\tconst pageNumber = page -1;\r\n\r\n\t\tthis.loadBots(pageNumber)\r\n\t}\r\n\r\n\tdeleteBot(id){\r\n\t\tapi.delete(`/bots/${id}`)\r\n\t\tthis.props.history.push(`/bots?page=${page}`)\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\tconst { bots, page, docInfo } = this.state\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"bots-list\">\r\n\t\t\t\t<article> \r\n\t\t\t\t\t<Link to={'/createBot'}> Criar um novo Bot </Link>\r\n\t\t\t\t</article>\r\n\t\t\t\t{bots.map(bot =>(\r\n\t\t\t\t\t<article key={bot._id}>\r\n\t\t\t\t\t\t<strong>{bot.name}</strong>\r\n\t\t\t\t\t\t<p>Criado em {bot.createdAt}</p>\r\n\t\t\t\t\t\t<Link to={`/bots/${bot._id}`}> Editar </Link>\r\n\t\t\t\t\t\t<button onClick={() => { this.deleteBot(bot._id) }}>\r\n\t\t\t\t\t\t\tDeletar\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</article>\r\n\r\n\t\t\t\t))}.bind(this)\r\n\r\n\t\t\t\t<div className=\"actions\">\r\n\t\t\t\t\t<button disabled={page === 1} onClick={this.prevPage}>\r\n\t\t\t\t\t\tAnterior\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button disabled={page === docInfo.pages} onClick={this.nextPage}>\r\n\t\t\t\t\t\tPr√≥ximo\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\samples\\\\botapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\samples\\\\botapp\\\\src\\\\pages\\\\mainChat\\\\index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\nexport default class MainChat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      docInfo: {},\n      page: 1 //Load that values\n\n    };\n\n    this.loadMessages = async (page = 1) => {\n      const response = await api.get(\"/messages?page=\".concat(page));\n      console.log(response.data);\n\n      const _response$data = response.data,\n            docs = _response$data.docs,\n            docInfo = _objectWithoutProperties(_response$data, [\"docs\"]);\n\n      this.setState({\n        messages: docs,\n        docInfo,\n        page\n      });\n    };\n\n    this.nextPage = () => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            docInfo = _this$state.docInfo;\n      if (page === docInfo.pages) return;\n      const pageNumber = page + 1;\n      this.loadMessages(pageNumber);\n    };\n\n    this.prevPage = () => {\n      const _this$state2 = this.state,\n            page = _this$state2.page,\n            docInfo = _this$state2.docInfo;\n      if (page === 1) return;\n      const pageNumber = page - 1;\n      this.loadMessages(pageNumber);\n    };\n  }\n\n  componentDidMount() {\n    this.loadMessages();\n  } //Fuction used to load all messages informations. note that we call docs in the data because we used\n  //pagination in the api.\n\n\n  render() {\n    const _this$state3 = this.state,\n          messages = _this$state3.messages,\n          page = _this$state3.page,\n          docInfo = _this$state3.docInfo;\n    return React.createElement(\"div\", {\n      className: \"messages-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/messages/\".concat(messages._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Criar uma nova mensagem \")), messages.map(messages => React.createElement(\"article\", {\n      key: messages._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Conversa: \", messages.chatId), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Corpo da mensagem: \", messages.body), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Remetente: \", messages.sender), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Enviada em \", messages.createdAt), React.createElement(Link, {\n      to: \"/messages/\".concat(messages._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Ver Apenas essa mensagem \"), React.createElement(Link, {\n      to: \"/chats/\".concat(messages.chatId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Ver todas as mensagens desta Conversa \"))), React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page === 1,\n      onClick: this.prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"button\", {\n      disabled: page === docInfo.pages,\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Lucas\\Desktop\\samples\\botapp\\src\\pages\\mainChat\\index.js"],"names":["React","Component","api","Link","MainChat","state","messages","docInfo","page","loadMessages","response","get","console","log","data","docs","setState","nextPage","pages","pageNumber","prevPage","componentDidMount","render","_id","map","chatId","body","sender","createdAt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport api from '../../services/api'\r\nimport './styles.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class MainChat extends Component {\r\n\t\r\n\r\n\r\n\tstate = {\r\n\t\tmessages: [],\r\n\t\tdocInfo: {},\r\n\t\tpage: 1,\r\n\r\n\t}\r\n\r\n\t//Load that values\r\n\tcomponentDidMount(){\r\n\t\tthis.loadMessages()\r\n\t}\r\n\r\n\t//Fuction used to load all messages informations. note that we call docs in the data because we used\r\n\t//pagination in the api.\r\n\tloadMessages = async (page = 1) => {\r\n\t\tconst response = await api.get(`/messages?page=${page}`)\r\n\t\tconsole.log(response.data)\r\n\t\tconst {docs, ...docInfo } = response.data \r\n\t\tthis.setState({messages: docs, docInfo, page})\r\n\t}\r\n\r\n\t//Function used to go to next page * Same idea! Do nothing when the users are in the last page\r\n\tnextPage = () =>{\r\n\t\tconst { page, docInfo} = this.state;\r\n\r\n\t\tif(page=== docInfo.pages) return\r\n\r\n\t\tconst pageNumber = page + 1;\r\n\r\n\t\tthis.loadMessages(pageNumber)\r\n\t}\r\n\t\r\n\t//Function used to go to previous page *Do nothing when the users are in the first page\r\n\tprevPage = () =>{\r\n\t\tconst { page, docInfo} = this.state;\r\n\r\n\t\tif(page=== 1) return\r\n\r\n\t\tconst pageNumber = page -1;\r\n\r\n\t\tthis.loadMessages(pageNumber)\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\tconst { messages, page, docInfo } = this.state\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"messages-list\">\r\n\t\t\t\t<article> \r\n\t\t\t\t\t<Link to={`/messages/${messages._id}`}> Criar uma nova mensagem </Link>\r\n\t\t\t\t</article>\r\n\t\t\t\t{messages.map(messages =>(\r\n\t\t\t\t\t<article key={messages._id}>\r\n\t\t\t\t\t\t<strong>Conversa: {messages.chatId}</strong>\r\n\t\t\t\t\t\t<p>Corpo da mensagem: {messages.body}</p>\r\n\t\t\t\t\t\t<p>Remetente: {messages.sender}</p>\r\n\t\t\t\t\t\t<p>Enviada em {messages.createdAt}</p>\r\n\t\t\t\t\t\t<Link to={`/messages/${messages._id}`}> Ver Apenas essa mensagem </Link>\r\n\t\t\t\t\t\t<Link to={`/chats/${messages.chatId}`}> Ver todas as mensagens desta Conversa </Link>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<div className=\"actions\">\r\n\t\t\t\t\t<button disabled={page === 1} onClick={this.prevPage}>\r\n\t\t\t\t\t\tAnterior\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button disabled={page === docInfo.pages} onClick={this.nextPage}>\r\n\t\t\t\t\t\tPrÃ³ximo\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}
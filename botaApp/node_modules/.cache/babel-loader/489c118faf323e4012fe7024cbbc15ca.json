{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\samples\\\\botapp\\\\src\\\\pages\\\\createMessage\\\\index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport './styles.css';\nexport default class CreateMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      body: '',\n      chatId: '',\n      sender: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  send(event) {\n    if (this.state.body !== '' && this.state.chatId !== '' && this.state.sender !== '') {\n      api.post('/messages', {\n        body: this.state.body,\n        chatId: this.state.chatId,\n        sender: this.state.sender\n      }, {\n        header: {\n          'Content-Type': 'aplication/json'\n        }\n      }).then(response => {\n        console.log(response);\n      });\n      event.preventDefault();\n      this.state = {\n        body: '',\n        chatId: '',\n        sender: ''\n      };\n      alert('Mensagem Enviada com Sucesso');\n    } else {\n      alert('Nenhum campo pode estar vazio');\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"message-create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Preencha todos os campos\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"ID conversa \"), React.createElement(\"input\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"chatId\",\n      value: this.state.chatId,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Remetente \"), React.createElement(\"input\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"sender\",\n      value: this.state.sender,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Mensagem \"), React.createElement(\"input\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Salvar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Lucas\\Desktop\\samples\\botapp\\src\\pages\\createMessage\\index.js"],"names":["React","Component","api","CreateMessage","constructor","props","state","body","chatId","sender","handleChange","bind","send","event","post","header","then","response","console","log","preventDefault","alert","setState","target","name","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport api from '../../services/api'\r\nimport './styles.css'\r\nexport default class CreateMessage extends Component{\r\n\t\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = { \r\n\t    \tbody: '',\r\n\t\t \tchatId: '',\r\n\t\t \tsender: '',\r\n\t\t }\r\n\r\n\t    this.handleChange = this.handleChange.bind(this);\r\n\t    this.send = this.send.bind(this);\r\n  \t}\r\n\r\n\tsend(event) {\r\n\t\tif(this.state.body !==''&&this.state.chatId !==''&&this.state.sender !==''){\r\n\t\t\t \r\n\t\t    api.post('/messages',{body:this.state.body, chatId:this.state.chatId, sender:this.state.sender },{header:{'Content-Type':'aplication/json'}}).then(response =>{\r\n\t\t    \tconsole.log(response)\r\n\t\t    })\r\n\t\t    event.preventDefault();\r\n\t\t    this.state = { \r\n\t\t    \tbody: '',\r\n\t\t\t \tchatId: '',\r\n\t\t\t \tsender: '',\r\n\t\t \t}\r\n\t\t    alert('Mensagem Enviada com Sucesso')\r\n\r\n\t    }else{\r\n\t    \talert('Nenhum campo pode estar vazio')\r\n\t    }\r\n  \t}\r\n\r\n  \thandleChange(event) {\r\n    \tthis.setState({ [event.target.name]: event.target.value });\r\n    \t\r\n  \t}\r\n  \t\r\n\r\n\trender(){\r\n\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"message-create\">\r\n\t\t\t\t<form onSubmit={this.send}>\r\n\t\t\t\t\t<strong>Preencha todos os campos</strong>\r\n\t\t\t\t\t<p>ID conversa </p>\r\n\t\t\t\t\t\t<input className='text-area' type='text' name='chatId' value={this.state.chatId} onChange={this.handleChange} />\r\n\t\t\t\t\t<p>Remetente </p>\r\n\t\t\t\t\t\t<input className='text-area' type='text' name='sender' value={this.state.sender} onChange={this.handleChange} />\r\n\t\t\t\t\t<p>Mensagem </p>\r\n\t\t\t\t\t\t<input className='text-area' type='text' name='body' value={this.state.body} onChange={this.handleChange} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input  type=\"submit\" value=\"Salvar\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
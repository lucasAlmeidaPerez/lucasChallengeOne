{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\samples\\\\botapp\\\\src\\\\pages\\\\createMessage\\\\index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport './styles.css';\nexport default class CreateMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      body: '',\n      chatId: '',\n      sender: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  send(event) {\n    if (this.state.body !== '') {\n      /*const {id} = this.props.match.params\r\n         api.put('/bots/'+id,{name:this.state.newName},{header:{'Content-Type':'aplication/json'}}).then(response =>{\r\n         \tconsole.log(response)\r\n         })\r\n         event.preventDefault();\r\n         this.setState({bot:{name:this.state.newName}})*/\n    } else {\n      alert('O campo novo nome não pode estar vazio');\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    const message = this.state.message;\n    return React.createElement(\"div\", {\n      className: \"message-create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Preencha todos os campos\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"ID conversa \"), React.createElement(\"input\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"chatId\",\n      value: this.state.chatId,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Remetente \"), React.createElement(\"input\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"sender\",\n      value: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Mensagem \"), React.createElement(\"input\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"body\",\n      value: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Salvar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Lucas\\Desktop\\samples\\botapp\\src\\pages\\createMessage\\index.js"],"names":["React","Component","api","CreateMessage","constructor","props","state","body","chatId","sender","handleChange","bind","send","event","alert","setState","target","name","value","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,cAAP;AACA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAqC;AAEnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,EADM;AAEdC,MAAAA,MAAM,EAAE,EAFM;AAGdC,MAAAA,MAAM,EAAE;AAHM,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEHC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACX,QAAG,KAAKP,KAAL,CAAWC,IAAX,KAAmB,EAAtB,EAAyB;AACxB;;;;;;AAOG,KARJ,MAQQ;AACJO,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACA;AACF;;AAEDJ,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKE,QAAL,CAAc;AAAE,OAACF,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAApC,KAAd;AAED;;AAGHC,EAAAA,MAAM,GAAE;AAAA,UACCC,OADD,GACa,KAAKd,KADlB,CACCc,OADD;AAIP,WACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAE,KAAKR,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFD,EAGE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,IAAI,EAAC,QAA9C;AAAuD,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,MAAzE;AAAiF,MAAA,QAAQ,EAAE,KAAKE,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJD,EAKE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,IAAI,EAAC,QAA9C;AAAuD,MAAA,KAAK,EAAC,EAA7D;AAAgE,MAAA,QAAQ,EAAE,KAAKA,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAND,EAOE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,KAAK,EAAC,EAA3D;AAA8D,MAAA,QAAQ,EAAE,KAAKA,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EASC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,CADD,CADD;AAeA;;AArDkD","sourcesContent":["import React, { Component } from 'react'\r\nimport api from '../../services/api'\r\nimport './styles.css'\r\nexport default class CreateMessage extends Component{\r\n\t\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = { \r\n\t    \tbody: '',\r\n\t\t \tchatId: '',\r\n\t\t \tsender: '',\r\n\t\t }\r\n\r\n\t    this.handleChange = this.handleChange.bind(this);\r\n\t    this.send = this.send.bind(this);\r\n  \t}\r\n\r\n\tsend(event) {\r\n\t\tif(this.state.body !==''){\r\n\t\t\t/*const {id} = this.props.match.params\r\n\t\t    api.put('/bots/'+id,{name:this.state.newName},{header:{'Content-Type':'aplication/json'}}).then(response =>{\r\n\t\t    \tconsole.log(response)\r\n\t\t    })\r\n\t\t    event.preventDefault();\r\n\t\t    this.setState({bot:{name:this.state.newName}})*/\r\n\r\n\t    }else{\r\n\t    \talert('O campo novo nome não pode estar vazio')\r\n\t    }\r\n  \t}\r\n\r\n  \thandleChange(event) {\r\n    \tthis.setState({ [event.target.name]: event.target.value });\r\n    \t\r\n  \t}\r\n  \t\r\n\r\n\trender(){\r\n\t\tconst { message } = this.state\r\n\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"message-create\">\r\n\t\t\t\t<form onSubmit={this.send}>\r\n\t\t\t\t\t<strong>Preencha todos os campos</strong>\r\n\t\t\t\t\t<p>ID conversa </p>\r\n\t\t\t\t\t\t<input className='text-area' type='text' name='chatId' value={this.state.chatId} onChange={this.handleChange} />\r\n\t\t\t\t\t<p>Remetente </p>\r\n\t\t\t\t\t\t<input className='text-area' type='text' name='sender' value='' onChange={this.handleChange} />\r\n\t\t\t\t\t<p>Mensagem </p>\r\n\t\t\t\t\t\t<input className='text-area' type='text' name='body' value='' onChange={this.handleChange} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input  type=\"submit\" value=\"Salvar\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}